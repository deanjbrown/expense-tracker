services:
  nodeserver:
    container_name: nodeserver_container
    restart: always
    build:
      context: ./backend
    ports:
      - 3000:3000
    develop:
      watch:
        - action: sync
          path: ./backend
          target: /usr/src/app
          ignore:
            - node_modules/
        - action: rebuild
          path: package.json
    env_file: ./backend/.env

  db:
    image: postgres:alpine
    container_name: db_container
    restart: always
    env_file: ./database/.env
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data

  reactserver:
    container_name: reactserver_container
    restart: always
    build:
      context: ./frontend
    ports:
      - "8080:8080"
    develop:
      watch:
        - action: sync
          path: ./frontend
          target: /usr/src/app
          ignore:
            - node_modules/
        - action: rebuild
          path: package.json

  nginxreverseproxy:
    container_name: nginx_container
    restart: always
    build:
      context: ./nginx
    ports:
      - "80:80"
    depends_on:
      - nodeserver
      - reactserver

  devadminer:
    restart: always
    image: adminer:latest
    container_name: devadminer
    ports:
      - "8081:8081"
    command:
      [
        "php",
        "-S",
        "0.0.0.0:8081",
        "-t",
        "/var/www/html",
        "/var/www/html/index.php",
      ]
    depends_on:
      - db

volumes:
  db-data:
